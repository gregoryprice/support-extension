"""Integration refactor: categories, platform names, and enabled field

Revision ID: b2c3d4e5f6g7
Revises: a1b2c3d4e5f6
Create Date: 2025-09-06 21:15:00.000000

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy import text

# revision identifiers, used by Alembic.
revision = 'b2c3d4e5f6g7'
down_revision = 'a1b2c3d4e5f6'
branch_labels = None
depends_on = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    
    # Step 1: Add new enum type for integration categories
    integration_category_enum = sa.Enum(
        'ticketing', 'crm', 'messaging', 'communication', 
        'project_management', 'code_repository', 'webhook',
        name='integrationcategory'
    )
    integration_category_enum.create(op.get_bind())
    
    # Step 2: Add new columns
    op.add_column('integrations', sa.Column(
        'integration_category',
        integration_category_enum,
        nullable=True,
        comment='Functional category of the integration'
    ))
    
    op.add_column('integrations', sa.Column(
        'platform_name',
        sa.String(50),
        nullable=True,
        comment='Name of the integration platform (jira, slack, etc.)'
    ))
    
    # Step 3: Rename is_enabled to enabled
    op.alter_column('integrations', 'is_enabled', new_column_name='enabled')
    
    # Step 4: Migrate existing data from integration_type to new fields
    conn = op.get_bind()
    
    # Platform mapping
    platform_mappings = {
        'jira': 'ticketing',
        'servicenow': 'ticketing', 
        'zendesk': 'ticketing',
        'freshdesk': 'ticketing',
        'salesforce': 'crm',
        'hubspot': 'crm',
        'slack': 'messaging',
        'teams': 'messaging',
        'email': 'communication',
        'sms': 'communication',
        'zoom': 'communication',
        'github': 'code_repository',
        'asana': 'project_management',
        'trello': 'project_management',
        'webhook': 'webhook'
    }
    
    # Update each integration based on existing integration_type
    for platform, category in platform_mappings.items():
        conn.execute(text(f"""
            UPDATE integrations 
            SET integration_category = '{category}', platform_name = '{platform}' 
            WHERE integration_type = '{platform}'
        """))
    
    # Step 5: Make new columns non-nullable after data migration
    op.alter_column('integrations', 'integration_category', nullable=False)
    op.alter_column('integrations', 'platform_name', nullable=False)
    
    # Step 6: Add indexes for new columns
    op.create_index(op.f('ix_integrations_integration_category'), 'integrations', ['integration_category'])
    op.create_index(op.f('ix_integrations_platform_name'), 'integrations', ['platform_name'])
    
    # Step 7: Drop the old integration_type column
    op.drop_index('ix_integrations_integration_type', table_name='integrations')
    op.drop_column('integrations', 'integration_type')

    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    
    # Step 1: Re-create integration_type enum and column
    integration_type_enum = sa.Enum(
        'jira', 'servicenow', 'salesforce', 'zendesk', 'github',
        'slack', 'teams', 'zoom', 'hubspot', 'freshdesk', 'asana',
        'trello', 'webhook', 'email', 'sms',
        name='integrationtype'
    )
    integration_type_enum.create(op.get_bind())
    
    op.add_column('integrations', sa.Column(
        'integration_type',
        integration_type_enum,
        nullable=True
    ))
    
    # Step 2: Migrate data back from new fields to old field
    conn = op.get_bind()
    conn.execute(text("""
        UPDATE integrations 
        SET integration_type = platform_name 
        WHERE platform_name IS NOT NULL
    """))
    
    # Step 3: Make integration_type non-nullable
    op.alter_column('integrations', 'integration_type', nullable=False)
    
    # Step 4: Rename enabled back to is_enabled
    op.alter_column('integrations', 'enabled', new_column_name='is_enabled')
    
    # Step 5: Drop new columns and indexes
    op.drop_index(op.f('ix_integrations_platform_name'), table_name='integrations')
    op.drop_index(op.f('ix_integrations_integration_category'), table_name='integrations')
    op.drop_column('integrations', 'platform_name')
    op.drop_column('integrations', 'integration_category')
    
    # Step 6: Re-create index for integration_type
    op.create_index('ix_integrations_integration_type', 'integrations', ['integration_type'])
    
    # Step 7: Drop new enum
    op.execute('DROP TYPE integrationcategory')
    
    # ### end Alembic commands ###