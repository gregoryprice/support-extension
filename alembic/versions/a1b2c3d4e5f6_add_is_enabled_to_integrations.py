"""Add is_enabled field to integrations table

Revision ID: a1b2c3d4e5f6
Revises: 685ab8cd68be
Create Date: 2025-09-06 21:05:00.000000

"""
from alembic import op
import sqlalchemy as sa

# revision identifiers, used by Alembic.
revision = 'a1b2c3d4e5f6'
down_revision = '685ab8cd68be'
branch_labels = None
depends_on = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    
    # Step 1: Add the is_enabled column, allowing nulls initially with default True
    op.add_column('integrations', sa.Column(
        'is_enabled', 
        sa.Boolean(), 
        nullable=True, 
        server_default=sa.text('true'),
        comment='Whether the integration is enabled for use'
    ))

    # Step 2: Set default value for existing integrations
    # All existing integrations should be enabled by default
    op.execute("UPDATE integrations SET is_enabled = true WHERE is_enabled IS NULL")

    # Step 3: Now that the data is set, alter the column to be non-nullable
    op.alter_column('integrations', 'is_enabled', existing_type=sa.Boolean(), nullable=False)
    
    # Step 4: Add index for performance
    op.create_index(op.f('ix_integrations_is_enabled'), 'integrations', ['is_enabled'], unique=False)

    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    
    # Remove the index and column
    op.drop_index(op.f('ix_integrations_is_enabled'), table_name='integrations')
    op.drop_column('integrations', 'is_enabled')
    
    # ### end Alembic commands ###